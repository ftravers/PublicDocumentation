"<< UP":../index.html

p(toc). Table of Contents

{toc}

h1. rsync

h2. Copy source to destination.

bc. rsync -avP --stats [source] [destination]

both @[source]@ and @[destination]@ can be like the following formats:

bc. [user_name]@[host_name]:[host_folder]

The following example copies a local folder @c:\fenton_dir@ to a remote server @spicevan.com@, logging in as the @root@ user.  The files get copied to the directory: @/home/ftravers/backupdir@

bc. rsync -avP --stats c:\fenton_dir root@spicevan.com:/home/ftravers/backupdir

The beauties of rsync are: 
* it will pick up where it left off.  Good for big files and slow network links.
* if you change a large file and re-run rsync it will not transfer the whole file only the sections of the file that have changed
* you can use it on a whole directory structure and it will only send the files that have changed.
* ... and a whole lot of other more technical details that I won't bother getting into here...

h1. Environment Variables

Edit the file: @~/.bashrc@, set an environment variable like the following:

bc. export [variable_name]=[variable_value]

The example below sets two environment variables: @PATH@ and @JAVA_HOME@.  Notice with the @PATH@ example I reuse the existing value of the @PATH@ variable to extend it.  This way I'm _adding_ to the path not _replacing_ it.

bc. 
export PATH=$PATH:/home/ft/bin/apache-maven-2.2.1/bin:/home/ft/bin/jdk1.6.0_18/bin
export JAVA_HOME=/home/ft/bin/jdk1.6.0_18

h1. Aliasing

Oftentimes we want to create shortcuts to commands that are arduous to type over and over.  An alias is your friend in these cases.  Just like Environment Variables, put these in @~/.bashrc@.  The way to do it is:

bc. alias [new_short_name]='[long_painful_to_type_command]'

example below allows me to type _vms_ instead of _ssh root@vms.lab.com_.  Notice the use of single quotes (') around the command.

bc. alias vms='ssh root@vms.lab.com'

h1. Misc Commands

h2. Linking 

Create a soft link:

bc. ln -s <existing_file> <new_link_name>

h2. Date / Time

bc. hwclock --set --date='08/18/07 14:40:40' --localtime