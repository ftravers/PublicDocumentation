Create a static list element.

Create 2 wysiwyg elements

Add 2WYSIWIG elements to static list by editing the static list xml.

Create a region definition and add the static list to it.

Create a region template to hold the region definition. 
Insert Object > Element > Static List

Create a placeholder

Add Region Template & Region Definition => to placeholder

Create placeholder Map

Insert placeholder map => Home Layout page

Assign a datafile to home template

--------------------------------------------

Create a Press Releases function.  That is on one page you have a list of press release titles.  Click on one and you get to the full press release.

=> Create your website, create a section called news, assign a primary and secondary page.

=> Create a plain text element and call it title, a wysiwyg element call it body and a dynamic list element.

=> Create two region definitions, one holds the title and body elements the other the dynmaic list.

=> Create two region templates, one is for the bulletted list of linked titles, the other to display the full news item.

=> Create two placeholder definitions, edit them to assign the corresponding region definitions and region templates to each.

=> Create two placeholder definition mappings, one to hold each placeholder definition.

=> Place the dynamic list placeholder definition on the primary page and the full news item placeholder definition on the secondary page

=> Edit news list region template.  Make sure to change the "9" below to the section id of your news section.
News Items:<br />
<!--$if wcmDynamicList("NewsList")-->
<!--$executeService("SS_GET_SEARCH_RESULTS")-->
<ul>
<!--$loop SearchResults-->
<li><a href="<!--$ssLink(dDocName,"9",siteId)-->">
<!--$ssIncludeXml(dDocName,"wcm:root/wcm:element[@name='Title']/text()")--></a><br />
<!--$endloop-->
</ul>
<!--$endif-->

=> Edit the news item region template and put the following in: (note be sure that you have the right names for title and body...you should get them by choosing "insert object > element")
<h1><!--$wcmElement("Title")--></h1>
<!--$wcmElement("Body")-->

=> Edit the Dynamic List Element.  Check off: "Edit Target Content Items".  Click settings button.  Edit query text > Capture Query > 

`Data File` <in> xWebsiteObjectType  <AND>  xRegionDefinition <matches> `T5_FULLNEWSITEM_REGDEF`

Now click the "New Item Settings" link, click "Default Metadata" button, default values button, put in mandatory and also set Region Definition to be the news item region definition you created before.

=> Right click primary page and choose assign content.  Click green plus symbol and add a contributor data file to hold the dynamic list data.

=> Right click the secondary page and choose assing content.  Choose red arrow and select: "Set Replaceable".  Also click green plus icon and add a CDF file to hold the first news item.

=> Go to primary page and choose Preview, get into contributor mode, and select the pencil item.  Now you can add and edit news items to your hearts content!!!

======================================================
Open WCM and JDeveloper
=> Create a Fusion Web Application
=> Create a lib folder under WEB-INF
/Users/traversfenton/jdeveloper/mywork/Application16/ViewController/public_html/WEB-INF/lib
=> put the oracle-ridc-client-10g.jar file into that 'lib' folder, refresh your jDeveloper Application Navigator window and you'll see the library there.
=> Double click the ViewController project, select "Libraries and Classpath" >"Add/"

======================================================
You will often want to create a page inside of site studio and then display that page inside 
of a JSP.

Putting the QueryText line in is helpful for understanding what query is being sent to the content server:
<!--$if wcmDynamicList("List")-->
<!--$QueryText-->
<!--$executeService("SS_GET_SEARCH_RESULTS")-->

You can append ?IsJava=1 to any site studio page to see what other variables have been set.

Make sure to append &siteId=XXX, where XXX is the site id determined by going into site studio designer
and choosing File > Site Connection Manager, and looking in the Web site ID column.

When you need to find the data file and placeholder for the WCM_PLACEHOLDER service go to site studio designer
Right Click on the primary page that you want to display > Assign Content > Hover over the placeholder definition
title (to the left of the two icons) and you will see:
	Content ID = Data File Content ID
	Placeholder Definition = PlaceHolder Content ID
Use these in your JSP call.

====================================================

Scenario:
A dynamic list shows up inside site studio but your WCM_PLACEHOLDER server call it doesn't 
show up.

==> First construct the URL you think you should be issuing to get your page.  The following is an 
example of what this might look like:

http://ucmel2/idc/idcplg?IdcService=WCM_PLACEHOLDER&dataFileDocName=CDF_FAQ_PRIMARY&placeholderDefinitionDocName=FAQ_LIST_PH

==> Next add ?IsJava=1 to the WCM browser where the content IS properly showing up

http://ucmel2/dewa/faq/index.htm?IsJava=1

Do this for your above URL as well:

http://ucmel2/idc/idcplg?IdcService=WCM_PLACEHOLDER&dataFileDocName=CDF_FAQ_PRIMARY&placeholderDefinitionDocName=FAQ_LIST_PH&IsJava=1

Compare the results and you'll often find what params you are missing.  In this case it is the siteId:

http://ucmel2/idc/idcplg?IdcService=WCM_PLACEHOLDER&dataFileDocName=CDF_FAQ_PRIMARY&placeholderDefinitionDocName=FAQ_LIST_PH
http://ucmel2/idc/idcplg?IdcService=WCM_PLACEHOLDER&dataFileDocName=CDF_FAQ_PRIMARY&placeholderDefinitionDocName=FAQ_LIST_PH&siteId=dewa

==> You can also put the following line in to verify that your query is equivalent in both environments

Change:
<!--$if wcmDynamicList("List")-->
<!--$executeService("SS_GET_SEARCH_RESULTS")-->

to:
<!--$if wcmDynamicList("List")-->
QueryText: <!--$QueryText--><br>
<!--$executeService("SS_GET_SEARCH_RESULTS")-->