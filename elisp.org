* REPL

: A-x ielm

* Function definition

: (defun foo () 5)
: (foo) => 5

Functions you'll call interactively, i.e. you can bind to a key
sequence, the above function can only be called from other functions.

: (defun foo () (interactive "r") 5)

: ~abc~

* Debugger

Instrument your function with:

: C-u C-A-x

or put ~(debug)~ in the function definition as a breakpoint.

SPC key to next through statements, result displayed in mini-buffer

: v
Toggle display of local variables

: d
Step?

: q
quit

: h - go Here
here. move to where you want emacs to stop (like breakpoint), press
'h' and when code hits that spot it will stop there.

: g - go
evaluate to the end of the function without quitting

: b
breakpoint

: G
go, dont stop at breakpoints

: i
go into sub-function. remains instrumented. re-eval func to
un-instrument.

https://www.youtube.com/watch?v=odkYXXYOxpo

for macros use macrostep
* Useful

Set a variable

:(setq a 123)


| function        | description                |
| symbol-function | get definition of function |
|                 |                            |
* Function Reference
** positions

: line-beginning-position

the position of the beginning of the current line

: point-max/point-min

the last/first point (position) in the buffer.

: point

current point position
* IELM

~C-c C-b~

Can select a buffer to bind the IELM to, so that functions such as
(point) report the point in that buffer and not the ielm buffer.
* Command Log Mode

With command log mode, it shows which functions are run.

Install:
: (use-package command-log-mode)

Enable for current buffer:
: M-x command-log-mode

Show the log:
: M-x clm/open-command-log-buffer
