* Shell Scripting

Take a file and for each line execute a command 

    # pacman -S $(< pkglist.txt)

+ (Shell Dorado)[http://shelldorado.com/]


** General

| Category      | Comments                                              |
| ------------- | ----------------------------------------------------- |
Comments        | Comments begin with a hash `#` symbol


** Command Line Arguments

| Variable      | Meaning                            |
| ------------- | ---------------------------------- |
$0              | is the name of the command
$1, $2, ...     | first, second, etc... param
$#              | number of params
$@              | list of all parameters

** Shell Commands

| Command       | Effect                             |
| ------------- | ---------------------------------- |
shift           | shift command line arguments to the left, ie $1 becomes the value of $2, $3 shifts into $2, etc. The command, "shift 2" will shift 2 places meaning the new value of $1 will be the old value of $3 and so forth.

** Testing
*** Integer Comparison

ref: http://tldp.org/LDP/abs/html/comparison-ops.html

is equal to:

#+BEGIN_SRC sh

if [[ "$a" -eq "$b" ]]

#+END_SRC

+ ne not equal, 
+ gt greater than,
+ lt, 
+ ge greater than or equal to,
+ le

*** String Comparison

[Ref](http://tldp.org/LDP/abs/html/comparison-ops.html)

String comparison operators: `==`, and `!=`

#+BEGIN_SRC sh

if [[ "$var" == "" ]]; then
   echo variable is null
fi

#+END_SRC

Integer comparison operators: `-eq`, `-ne`, `-gt`, `-lt`, `-ge`,
`-le`.  Equal, not equal, greater than, less than, greater than or
equal to, less than or equal to.

Test if command was passed any arguments

#+BEGIN_SRC sh 

if [[ $# -gt 0 ]]; then

fi

#+END_SRC


File testing operators: 

Op | Meaning
-- | -------------
-e | file exists
-f | file is a regular file (not a directory or device file)
-s | file is not zero size
-d | file is a directory


** Iteration, control and if statements

    case $NUM of
    1)
      echo The number is 1
      ;;
    2)
      echo The number is 2
      ;;
    *)
      echo The number is not 1 or 2
      ;;
    esac

** Functions

define function

    myFunc() {
      echo "Hello World!"
    }

calling function

    myFunc

passing arguments

    myFunc() {
      echo "Hello " . $1
    }

calling function

    myFunc "Fenton"

** Looping over an array

```bash
dirs=("tmp" "src" "dist")

for dir in "${dirs[@]}"
do
  echo $dir
done
```

** Capture command output

    var=`date`
    echo $var

if your command has multiple commands separated by | then use.  The
following checks if I'm on my vpn.  The if clause checks to see if the
variable is a [-n]on empty string.

```bash
OnVpn=$(ifconfig | grep cscotun0)
if [ -n "$OnVpn" ]
```

* Samples

** Copy / Backup files

    timestamp=`date +%s`
    echo "Setting the timestamp: ${timestamp} into the file timestamp."
    echo $timestamp > timestamp
    copyFile() {
      theDir=$1
      theFile=$2
      echo "Backing up the file: ${theDir}/${theFile} -> ${theDir}/${theFile}.${timestamp}"
      cp $theDir/$theFile $theDir/$theFile.$timestamp
      echo "Copying file: ${theFile} -> ${theDir}/${theFile}"
      cp $theFile $theDir/$theFile
    }
    copyFile ~ .bashrc
    copyFile ~ .bash_aliases

