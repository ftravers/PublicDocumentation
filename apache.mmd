c# Config

## Config File

What               | Debian                                    | Red Hat
------------------ | ----------------------------------------- | ----------------------------
Master Config      | /etc/apache2/apache2.conf                 | /etc/httpd/conf/httpd.conf
Actual Config      | /etc/apache2/sites-enabled/000-default    | 
DocumentRoot       | /var/www                                  | /var/www/html
Restart/Control    | sudo /etc/init.d/apache2 restart          | service httpd restart


```apache
<VirtualHost *:80>
  ServerName docs
  DocumentRoot /home/f/bin/website
</VirtualHost>
```


# Installation

How to install apache on redhat linux based distributions from source.  Download the latest source, extract, and in the folder do:

## No SSL

<pre><div class="sample_code">./configure --prefix=<span class="parameter">PREFIX</span></div></pre>

### With SSL

Install openssl if you don't have it.  Change the `configure` line to:

<pre><div class="sample_code">./configure --prefix=<span class="parameter">PREFIX</span> <span class="highlight">--enable-ssl</span> <span class="highlight">--with-ssl=</span><span class="parameter">SSL_INSTALL_DIR</span></div></pre>

example:

    ./configure --prefix=/u01/app/oracle/ngsp/httpd --enable-ssl --with-ssl=/u01/app/oracle/ngsp/openssl/

Where 

<pre><div class="sample_code"><span class="parameter">PREFIX</span></div></pre>

is the name of the folder where you want apache installed into.  Then do the following:

     make
     make install

Start apache:

<pre><div class="sample_code"><span class="parameter">PREFIX</span>/bin/apachectl start</div></pre>

### SSL Config

If you don't want your server listening on the unsecured port, then comment out the first `Listen 80` in 

<pre><div class="sample_code"><span class="parameter">HTTPD_DIR</span>/conf/httpd.conf</div></pre>

<pre><div class="sample_code"><span class="highlight">#</span> Listen 80</div></pre>

Uncomment the ssl `Include` statement

    # Secure (SSL/TLS) connections
    Include conf/extra/httpd-ssl.conf

Now edit file:

<pre><div class="sample_code"><span class="parameter">HTTPD_DIR</span>/conf/extra/httpd-ssl.conf</div></pre>

Pick a random seed method, I chose:

    SSLRandomSeed startup file:/dev/urandom 512

Here, modify 512 to the port you wish Apache to listen to.
If required change listen port

<pre><div class="sample_code">Listen <span class="highlight">1443</span></div></pre>

#### Update Certificate References

Update the following params to point to your private key, public
certificate, CA certificate signing chain

What                   | Param Name
---------------------- | ------------------------
public certificate     | SSLCertificateFile 
private key            | SSLCertificateKeyFile
signing chain          | SSLCertificateChainFile



### Virtual Hosts

I adjusted the following params in the same file, httpd-ssl.conf:

<pre><div class="sample_code">&lt;VirtualHost _default_:<span class="highlight">1443</span>&gt;

#### General setup for the virtual host
DocumentRoot <span class="highlight">"/scratch/ngsp/httpd/htdocs"</span>
ServerName <span class="highlight">myhelpstage.oraclecorp.com:1443</span>
ServerAdmin <span class="highlight">fenton.travers@oracle.com</span></div></pre>


### Create a self-signed certificate

Generate the keys for the Certificate Authority (the key that will do
the signing)

create a certificate authority (ca) key.  You are being your own
certificate authority (i.e. self-signed).

    openssl genrsa -des3 -out ca.key 4096

create a CA certificate.

    openssl req -new -x509 -days 3650 -key ca.key -out ca.crt

Generate the private key for your server

    openssl genrsa -des3 -out server.key 4096

Create a CSR (certificate signing request) to get signed by the CA (you ;))

    openssl req -new -key server.key -out server.csr

Sign your csr with the key you made in the first step

    openssl x509 -req -days 3650 -in server.csr -CA ca.crt -CAkey ca.key -set_serial 01 -out server.crt

Optionally remove the password from your key (if you do this protect your key!!!)

    openssl rsa -in server.key -out server.nopass.key

Add these lines to your Apache config

<pre><div class="sample_code"><span class="parameter">HTTPD_DIR</span>/conf/extra/httpd-ssl.conf</div></pre>

<pre><div class="sample_code">SSLEngine on
SSLCertificateFile    <span class="parameter">HTTPD_DIR</span>/server.crt
SSLCertificateKeyFile <span class="parameter">HTTPD_DIR</span>/server.nopass.key</div></pre>

Create a certificate renewal request from private key and existing
certificate

    openssl x509 


## Named Virtual Hosts

    # Listen for virtual host requests on all IP addresses
    NameVirtualHost *:80
     
    <VirtualHost *:80>
      ServerName 127.0.0.1
      DocumentRoot /var/www
    </VirtualHost>
     
    <VirtualHost *:80>
      ServerName docs
      DocumentRoot /home/oracle/bin/website   
    </VirtualHost>

## Include

Instead of putting all your configurations into the `httpd.conf` or
`apache.conf` file, you can reference an external file with an
`include` statement.

Providing paths relative to your `ServerRoot` directory:

    Include conf/ssl.conf
    Include conf/vhosts/*.conf


